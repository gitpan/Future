Revision history for Future

0.11    CHANGES:
         * Added Future::Phrasebook documentation file
         * Ensure that exceptions thrown from ->followed_by code block are
           caught and turned into failed Futures
         * Fix filename regexp matches for unit-tests so they work on Windows

0.10    BUGFIXES:
         * Account for newer Carp version in unit tests, which appends
           trailing period to messages

0.09    CHANGES:
         * Split ->fail method into new ->die call, only append caller
           file/line to the exception in the latter
         * Various documentation and example improvements

0.08    CHANGES:
         * Ignore attempts to cancel already-complete or already-cancelled
           futures, or to attach ->on_cancel callbacks to them
         * $future->get should return the first result in scalar context
         * Added Future::Utils with repeat { ...} and
           repeat_until_success { ... } looping constructs

         * Link to LPW2012 talk slides

0.07    CHANGES:
         * Leak debugging

0.06    CHANGES:
         * Remembered to actually include the example scripts. No other actual
           code changes.

0.05    CHANGES:
         * Respect subclassing by allowing ->new on instances
         * Allow subclasses to provide an ->await method which will be used
           by ->get and ->failure
         * Added some example scripts to demonstrate how to use Futures with
           various event systems

0.04    CHANGES:
         * Fix implementation of sequenced futures to work properly on
           immediates
         * Ensure that future->future chaining via callbacks works correctly
           on immediates
         * Link to "curry" in the docs about CODE-returning convenience
           accessors ->done_cb, ->fail_cb and ->cancel_cb

0.03    INCOMPATIBLE CHANGES:
         * Future->needs_all and Future->needs_any now return dependents'
           results

        CHANGES:
         * Removed $future->( ... ) callable override
         * Pass $f1 to ->or_else code block by symmetry with ->and_then
         * Added $f->followed_by
         * Added Future->wait_any dependent future constructor
         * Rearranged documentation and added more examples

0.02    CHANGES:
         * Rearranged non-leaf future logic
         * Added {pending,ready,done,failed,cancelled}_futures accessors
         * Added Future->needs_any constructor

0.01    First version, released on an unsuspecting world.

